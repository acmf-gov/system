
> barca-coletiva@1.0.0 dev
> nodemon --exec "npx tsx server.ts" --watch server.ts --watch src --ext ts,tsx,js,jsx 2>&1 | tee dev.log

[33m[nodemon] 3.1.10[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): server.ts src/**/*[39m
[33m[nodemon] watching extensions: ts,tsx,js,jsx[39m
[32m[nodemon] starting `npx tsx server.ts`[39m
 â¨¯ uncaughtException: Error: listen EADDRINUSE: address already in use 0.0.0.0:3000
    at <unknown> (Error: listen EADDRINUSE: address already in use 0.0.0.0:3000) {
  code: 'EADDRINUSE',
  errno: -98,
  syscall: 'listen',
  address: '0.0.0.0',
  port: 3000
}
 â¨¯ uncaughtException:  Error: listen EADDRINUSE: address already in use 0.0.0.0:3000
    at <unknown> (Error: listen EADDRINUSE: address already in use 0.0.0.0:3000) {
  code: 'EADDRINUSE',
  errno: -98,
  syscall: 'listen',
  address: '0.0.0.0',
  port: 3000
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `npx tsx server.ts`[39m
> Ready on http://0.0.0.0:3000
> Socket.IO server running at ws://0.0.0.0:3000/api/socketio
 â—‹ Compiling /api/addresses ...
 âœ“ Compiled /api/addresses in 1227ms (365 modules)
prisma:query BEGIN
prisma:query INSERT INTO `dbcenter`.`addresses` (`id`,`userId`,`street`,`number`,`neighborhood`,`city`,`state`,`zipCode`,`complement`,`isDefault`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)
prisma:query SELECT `dbcenter`.`addresses`.`id`, `dbcenter`.`addresses`.`userId`, `dbcenter`.`addresses`.`street`, `dbcenter`.`addresses`.`number`, `dbcenter`.`addresses`.`neighborhood`, `dbcenter`.`addresses`.`city`, `dbcenter`.`addresses`.`state`, `dbcenter`.`addresses`.`zipCode`, `dbcenter`.`addresses`.`complement`, `dbcenter`.`addresses`.`isDefault`, `dbcenter`.`addresses`.`createdAt`, `dbcenter`.`addresses`.`updatedAt` FROM `dbcenter`.`addresses` WHERE `dbcenter`.`addresses`.`id` = ? LIMIT ? OFFSET ?
prisma:query COMMIT
 POST /api/addresses 200 in 4027ms
 â—‹ Compiling / ...
 âœ“ Compiled / in 2.5s (793 modules)
prisma:query SELECT `dbcenter`.`addresses`.`id`, `dbcenter`.`addresses`.`userId`, `dbcenter`.`addresses`.`street`, `dbcenter`.`addresses`.`number`, `dbcenter`.`addresses`.`neighborhood`, `dbcenter`.`addresses`.`city`, `dbcenter`.`addresses`.`state`, `dbcenter`.`addresses`.`zipCode`, `dbcenter`.`addresses`.`complement`, `dbcenter`.`addresses`.`isDefault`, `dbcenter`.`addresses`.`createdAt`, `dbcenter`.`addresses`.`updatedAt` FROM `dbcenter`.`addresses` WHERE `dbcenter`.`addresses`.`userId` = ? ORDER BY `dbcenter`.`addresses`.`createdAt` DESC
 GET /api/addresses 200 in 1636ms
 âœ“ Compiled in 1310ms (360 modules)
 GET / 200 in 3822ms
 GET / 200 in 159ms
 â—‹ Compiling /api/chat/rooms ...
 âœ“ Compiled /api/chat/rooms in 851ms (781 modules)
prisma:query SELECT 1
prisma:query BEGIN
prisma:query INSERT INTO `dbcenter`.`chat_rooms` (`id`,`name`,`description`,`isPrivate`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?)
prisma:query SELECT `dbcenter`.`chat_rooms`.`id`, `dbcenter`.`chat_rooms`.`name`, `dbcenter`.`chat_rooms`.`description`, `dbcenter`.`chat_rooms`.`isPrivate`, `dbcenter`.`chat_rooms`.`createdAt`, `dbcenter`.`chat_rooms`.`updatedAt`, COALESCE(`aggr_selection_0_ChatMember`.`_aggr_count_members`, 0) AS `_aggr_count_members`, COALESCE(`aggr_selection_1_ChatMessage`.`_aggr_count_messages`, 0) AS `_aggr_count_messages` FROM `dbcenter`.`chat_rooms` LEFT JOIN (SELECT `dbcenter`.`chat_members`.`roomId`, COUNT(*) AS `_aggr_count_members` FROM `dbcenter`.`chat_members` WHERE 1=1 GROUP BY `dbcenter`.`chat_members`.`roomId`) AS `aggr_selection_0_ChatMember` ON (`dbcenter`.`chat_rooms`.`id` = `aggr_selection_0_ChatMember`.`roomId`) LEFT JOIN (SELECT `dbcenter`.`chat_messages`.`roomId`, COUNT(*) AS `_aggr_count_messages` FROM `dbcenter`.`chat_messages` WHERE 1=1 GROUP BY `dbcenter`.`chat_messages`.`roomId`) AS `aggr_selection_1_ChatMessage` ON (`dbcenter`.`chat_rooms`.`id` = `aggr_selection_1_ChatMessage`.`roomId`) WHERE `dbcenter`.`chat_rooms`.`id` = ? LIMIT ? OFFSET ?
prisma:query SELECT `dbcenter`.`chat_members`.`id`, `dbcenter`.`chat_members`.`roomId`, `dbcenter`.`chat_members`.`userId`, `dbcenter`.`chat_members`.`joinedAt` FROM `dbcenter`.`chat_members` WHERE `dbcenter`.`chat_members`.`roomId` IN (?)
prisma:query COMMIT
 POST /api/chat/rooms 200 in 2971ms
 âœ“ Compiled in 783ms (360 modules)
 GET / 200 in 204ms
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `npx tsx server.ts`[39m
 â¨¯ uncaughtException: Error: listen EADDRINUSE: address already in use 0.0.0.0:3000
    at <unknown> (Error: listen EADDRINUSE: address already in use 0.0.0.0:3000) {
  code: 'EADDRINUSE',
  errno: -98,
  syscall: 'listen',
  address: '0.0.0.0',
  port: 3000
}
 â¨¯ uncaughtException:  Error: listen EADDRINUSE: address already in use 0.0.0.0:3000
    at <unknown> (Error: listen EADDRINUSE: address already in use 0.0.0.0:3000) {
  code: 'EADDRINUSE',
  errno: -98,
  syscall: 'listen',
  address: '0.0.0.0',
  port: 3000
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `npx tsx server.ts`[39m
> Ready on http://0.0.0.0:3000
> Socket.IO server running at ws://0.0.0.0:3000/api/socketio
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `npx tsx server.ts`[39m
 â¨¯ uncaughtException: Error: listen EADDRINUSE: address already in use 0.0.0.0:3000
    at <unknown> (Error: listen EADDRINUSE: address already in use 0.0.0.0:3000) {
  code: 'EADDRINUSE',
  errno: -98,
  syscall: 'listen',
  address: '0.0.0.0',
  port: 3000
}
 â¨¯ uncaughtException:  Error: listen EADDRINUSE: address already in use 0.0.0.0:3000
    at <unknown> (Error: listen EADDRINUSE: address already in use 0.0.0.0:3000) {
  code: 'EADDRINUSE',
  errno: -98,
  syscall: 'listen',
  address: '0.0.0.0',
  port: 3000
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `npx tsx server.ts`[39m
> Ready on http://0.0.0.0:3000
> Socket.IO server running at ws://0.0.0.0:3000/api/socketio
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `npx tsx server.ts`[39m
 â¨¯ uncaughtException: Error: listen EADDRINUSE: address already in use 0.0.0.0:3000
    at <unknown> (Error: listen EADDRINUSE: address already in use 0.0.0.0:3000) {
  code: 'EADDRINUSE',
  errno: -98,
  syscall: 'listen',
  address: '0.0.0.0',
  port: 3000
}
 â¨¯ uncaughtException:  Error: listen EADDRINUSE: address already in use 0.0.0.0:3000
    at <unknown> (Error: listen EADDRINUSE: address already in use 0.0.0.0:3000) {
  code: 'EADDRINUSE',
  errno: -98,
  syscall: 'listen',
  address: '0.0.0.0',
  port: 3000
}
